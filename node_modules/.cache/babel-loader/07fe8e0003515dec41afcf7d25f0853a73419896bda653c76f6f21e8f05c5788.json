{"ast":null,"code":"var _jsxFileName = \"/Users/estherma/Desktop/UDR-Test/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import useHistory\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport { useHistory } from 'react-router-dom';\n\n// function App() {\n//   return (\n\n// <div className=\"App\">\n//   <header className=\"App-header\">\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     <p>\n//       Edit <code>src/App.js</code> and save to reload.\n//     </p>\n//     <a\n//       className=\"App-link\"\n//       href=\"https://reactjs.org\"\n//       target=\"_blank\"\n//       rel=\"noopener noreferrer\"\n//     >\n//       Learn React\n//     </a>\n//   </header>\n// </div>\n\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useHistory(); // Initialize history hook\n\n  const handleLogin = (username, password) => {\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n      history.push('/dashboard'); // Use history.push to redirect after login\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qMAwOeEFdCSWoYbaDKLqXLZ3lbU=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","BrowserRouter","Router","Route","LoginForm","Dashboard","useHistory","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","history","handleLogin","username","password","push","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","onLogin","_c","$RefreshReg$"],"sources":["/Users/estherma/Desktop/UDR-Test/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from 'react';\n\nimport './App.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'; // Import useHistory\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport { useHistory } from 'react-router-dom';\n\n\n\n\n// function App() {\n//   return (\n    \n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    \n//   );\n// }\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useHistory(); // Initialize history hook\n\n  const handleLogin = (username, password) => {\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n      history.push('/dashboard'); // Use history.push to redirect after login\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>My App</h1>\n        </header>\n        <Route exact path=\"/\">\n          <LoginForm onLogin={handleLogin} />\n        </Route>\n        <Route path=\"/dashboard\">\n          {isLoggedIn ? <Dashboard /> : <LoginForm onLogin={handleLogin} />}\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAClB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAO,kBAAkB,CAAC,CAAC;AAClE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,UAAU,QAAQ,kBAAkB;;AAK7C;AACA;;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMa,OAAO,GAAGP,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,MAAMQ,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChDJ,aAAa,CAAC,IAAI,CAAC;MACnBC,OAAO,CAACI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEV,OAAA,CAACN,MAAM;IAAAiB,QAAA,eACLX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBX,OAAA;QAAQY,SAAS,EAAC,YAAY;QAAAD,QAAA,eAC5BX,OAAA;UAAAW,QAAA,EAAI;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACThB,OAAA,CAACL,KAAK;QAACsB,KAAK;QAACC,IAAI,EAAC,GAAG;QAAAP,QAAA,eACnBX,OAAA,CAACJ,SAAS;UAACuB,OAAO,EAAEb;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACRhB,OAAA,CAACL,KAAK;QAACuB,IAAI,EAAC,YAAY;QAAAP,QAAA,EACrBR,UAAU,gBAAGH,OAAA,CAACH,SAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACJ,SAAS;UAACuB,OAAO,EAAEb;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CA5BQD,GAAG;EAAA,QAEMH,UAAU;AAAA;AAAAsB,EAAA,GAFnBnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}