{"ast":null,"code":"var _jsxFileName = \"/Users/estherma/Desktop/UDR-Test/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'; // Import Redirect and Switch\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport DataInput from './components/DataInput';\nimport DataQuery from './components/DataQuery';\n\n// function App() {\n//   return (\n\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n\n//   const handleLogin = (username, password) => {\n//     // Add your login logic here\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard onPageChange={handleNavigation} />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n\n//       {currentPage === 'dataInput' && <DataInput />}\n//       {currentPage === 'dataQuery' && <DataQuery />}\n//     </div>\n//   );\n// }\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = (username, password) => {\n    console.log('Logging in with username:', username, 'and password:', password);\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/data-input\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(DataInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/data-query\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(DataQuery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","BrowserRouter","Router","Route","Switch","Redirect","LoginForm","Dashboard","DataInput","DataQuery","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","username","password","console","log","children","className","exact","path","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/Users/estherma/Desktop/UDR-Test/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from 'react';\n\nimport './App.css';\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'; // Import Redirect and Switch\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport DataInput from './components/DataInput';\nimport DataQuery from './components/DataQuery';\n\n\n\n// function App() {\n//   return (\n    \n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n    \n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n\n//   const handleLogin = (username, password) => {\n//     // Add your login logic here\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard onPageChange={handleNavigation} />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n\n//       {currentPage === 'dataInput' && <DataInput />}\n//       {currentPage === 'dataQuery' && <DataQuery />}\n//     </div>\n//   );\n// }\n// export default App;\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = (username, password) => {\n    console.log('Logging in with username:', username, 'and password:', password);\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {isLoggedIn ? <Redirect to=\"/dashboard\" /> : <LoginForm onLogin={handleLogin} />}\n          </Route>\n          <Route path=\"/dashboard\">\n            {isLoggedIn ? <Dashboard /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/data-input\">\n            {isLoggedIn ? <DataInput /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/data-query\">\n            {isLoggedIn ? <DataQuery /> : <Redirect to=\"/\" />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAClB;AACA,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAEnF,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;;AAI9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgB,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEH,QAAQ,EAAE,eAAe,EAAEC,QAAQ,CAAC;IAC7E,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChDH,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACT,MAAM;IAAAmB,QAAA,eACLV,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBV,OAAA,CAACP,MAAM;QAAAiB,QAAA,gBACLV,OAAA,CAACR,KAAK;UAACoB,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAH,QAAA,EAClBP,UAAU,gBAAGH,OAAA,CAACN,QAAQ;YAACoB,EAAE,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACL,SAAS;YAACwB,OAAO,EAAEd;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACRlB,OAAA,CAACR,KAAK;UAACqB,IAAI,EAAC,YAAY;UAAAH,QAAA,EACrBP,UAAU,gBAAGH,OAAA,CAACJ,SAAS;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACN,QAAQ;YAACoB,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACRlB,OAAA,CAACR,KAAK;UAACqB,IAAI,EAAC,aAAa;UAAAH,QAAA,EACtBP,UAAU,gBAAGH,OAAA,CAACH,SAAS;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACN,QAAQ;YAACoB,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACRlB,OAAA,CAACR,KAAK;UAACqB,IAAI,EAAC,aAAa;UAAAH,QAAA,EACtBP,UAAU,gBAAGH,OAAA,CAACF,SAAS;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACN,QAAQ;YAACoB,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAAChB,EAAA,CAhCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}