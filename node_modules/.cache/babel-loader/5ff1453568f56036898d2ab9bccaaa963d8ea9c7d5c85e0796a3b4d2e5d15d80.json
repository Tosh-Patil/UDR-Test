{"ast":null,"code":"var _jsxFileName = \"/Users/estherma/Desktop/UDR-Test/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'; // Import Redirect and Switch\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport DataInput from './components/DataInput';\nimport DataQuery from './components/DataQuery';\n\n// function App() {\n//   return (\n\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n\n//   const handleLogin = (username, password) => {\n//     // Add your login logic here\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const handleBackToDashboard = () => {\n//     setCurrentPage('dashboard');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         currentPage === 'dashboard' ? (\n//           <Dashboard onPageChange={handleNavigation} />\n//         ) : (\n//           currentPage === 'dataInput' && <DataInput onBackToDashboard={handleBackToDashboard} />\n//         )\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n\n//       {/* Remove rendering of DataQuery component in this example */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const handleBackToDashboard = () => {\n//     setCurrentPage('dashboard');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         currentPage === 'dashboard' ? (\n//           <Dashboard onPageChange={handleNavigation} />\n//         ) : (\n//           currentPage === 'dataInput' ? (\n//             <DataInput onBackToDashboard={handleBackToDashboard} />\n//           ) : (\n//             currentPage === 'dataQuery' && <DataQuery onBackToDashboard={handleBackToDashboard} />\n//           )\n//         )\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n  const handleLogin = (username, password) => {\n    console.log('Logging in with username:', username, 'and password:', password);\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n      setCurrentPage('dashboard');\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setCurrentPage('login'); // Set current page to login when logging out\n  };\n  const handleNavigation = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        onPageChange: handleNavigation,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), currentPage === 'dataInput' && /*#__PURE__*/_jsxDEV(DataInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 43\n      }, this), currentPage === 'dataQuery' && /*#__PURE__*/_jsxDEV(DataQuery, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ctRupo4c4QmvQnDcrbrxhS4M0uw=\");\n_c = App;\nexport default App;\n//not working\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         {isLoggedIn ? (\n//           <Redirect to=\"/dashboard\" />\n//         ) : (\n//           <Route path=\"/\" exact>\n//             <LoginForm onLogin={handleLogin} />\n//           </Route>\n//         )}\n\n//         <Route path=\"/dashboard\" exact>\n//           <Dashboard onPageChange={handleNavigation} />\n//         </Route>\n\n//         <Route path=\"/datainput\" exact>\n//           <DataInput />\n//         </Route>\n\n//         <Route path=\"/dataquery\" exact>\n//           <DataQuery />\n//         </Route>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     setIsLoggedIn(false);\n//     setCurrentPage('login');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         renderDashboard()\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n\n//   function renderDashboard() {\n//     switch (currentPage) {\n//       case 'dashboard':\n//         return <Dashboard onLogout={handleLogout} />;\n//       case 'dataInput':\n//         return <DataInput />;\n//       case 'dataQuery':\n//         return <DataQuery />;\n//       default:\n//         return null;\n//     }\n//   }\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","BrowserRouter","Router","Route","Switch","Redirect","LoginForm","Dashboard","DataInput","DataQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","currentPage","setCurrentPage","handleLogin","username","password","console","log","handleLogout","handleNavigation","page","className","children","onPageChange","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/Users/estherma/Desktop/UDR-Test/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from 'react';\n\nimport './App.css';\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'; // Import Redirect and Switch\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport LoginForm from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport DataInput from './components/DataInput';\nimport DataQuery from './components/DataQuery';\n\n\n\n// function App() {\n//   return (\n    \n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n    \n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n\n//   const handleLogin = (username, password) => {\n//     // Add your login logic here\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         <Dashboard />\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const handleBackToDashboard = () => {\n//     setCurrentPage('dashboard');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         currentPage === 'dashboard' ? (\n//           <Dashboard onPageChange={handleNavigation} />\n//         ) : (\n//           currentPage === 'dataInput' && <DataInput onBackToDashboard={handleBackToDashboard} />\n//         )\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n\n//       {/* Remove rendering of DataQuery component in this example */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const handleBackToDashboard = () => {\n//     setCurrentPage('dashboard');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         currentPage === 'dashboard' ? (\n//           <Dashboard onPageChange={handleNavigation} />\n//         ) : (\n//           currentPage === 'dataInput' ? (\n//             <DataInput onBackToDashboard={handleBackToDashboard} />\n//           ) : (\n//             currentPage === 'dataQuery' && <DataQuery onBackToDashboard={handleBackToDashboard} />\n//           )\n//         )\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n  const handleLogin = (username, password) => {\n    console.log('Logging in with username:', username, 'and password:', password);\n    if (username === 'admin' && password === 'admin') {\n      setIsLoggedIn(true);\n      setCurrentPage('dashboard');\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setCurrentPage('login'); // Set current page to login when logging out\n  };\n\n  const handleNavigation = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <>\n          <Dashboard onPageChange={handleNavigation} onLogout={handleLogout} />\n          {currentPage === 'dataInput' && <DataInput />}\n          {currentPage === 'dataQuery' && <DataQuery />}\n        </>\n      ) : (\n        <LoginForm onLogin={handleLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n//not working\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleNavigation = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         {isLoggedIn ? (\n//           <Redirect to=\"/dashboard\" />\n//         ) : (\n//           <Route path=\"/\" exact>\n//             <LoginForm onLogin={handleLogin} />\n//           </Route>\n//         )}\n\n//         <Route path=\"/dashboard\" exact>\n//           <Dashboard onPageChange={handleNavigation} />\n//         </Route>\n\n//         <Route path=\"/datainput\" exact>\n//           <DataInput />\n//         </Route>\n\n//         <Route path=\"/dataquery\" exact>\n//           <DataQuery />\n//         </Route>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [currentPage, setCurrentPage] = useState('login'); // 'login', 'dashboard', 'dataInput', 'dataQuery'\n\n//   const handleLogin = (username, password) => {\n//     console.log('Logging in with username:', username, 'and password:', password);\n//     if (username === 'admin' && password === 'admin') {\n//       setIsLoggedIn(true);\n//       setCurrentPage('dashboard');\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     setIsLoggedIn(false);\n//     setCurrentPage('login');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {isLoggedIn ? (\n//         renderDashboard()\n//       ) : (\n//         <LoginForm onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n\n//   function renderDashboard() {\n//     switch (currentPage) {\n//       case 'dashboard':\n//         return <Dashboard onLogout={handleLogout} />;\n//       case 'dataInput':\n//         return <DataInput />;\n//       case 'dataQuery':\n//         return <DataQuery />;\n//       default:\n//         return null;\n//     }\n//   }\n// }\n\n// export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}